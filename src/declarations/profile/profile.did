type Result = 
 variant {
   err: Error;
   ok: Profile;
 };
type ProfileWithId = 
 record {
   details: Details;
   id: nat;
   image: opt Image;
 };
type Profile = 
 record {
   details: Details;
   image: opt Image;
 };
type Image = 
 record {
   data: blob;
   fileName: text;
   filetype: text;
 };
type Error = 
 variant {
   AlreadyExists;
   NotFound;
 };
type Details = 
 record {
   age: nat;
   city: text;
   country: text;
   name: text;
   state: text;
   surname: text;
 };
service : {
  create: (Profile) -> (bool);
  delete: (nat) -> (bool);
  listAllProfiles: () -> (vec ProfileWithId) query;
  read: (nat) -> (Result) query;
  update: (nat, Profile) -> (bool);
}
